<Controls:MetroWindow x:Class="WpfApplication1.DBBrowser"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:behaviors="clr-namespace:WpfApplication1.Common.Behaviors"
        xmlns:vsm ="clr-namespace:System.Windows;assembly=PresentationFramework"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:Converters="http://metro.mahapps.com/winfx/xaml/shared"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:res="clr-namespace:WpfApplication1.Properties"
        Title="Salute Database" Height="600" SizeToContent="Width" Name="DbWindow" ResizeMode="NoResize"
                      Icon="icon.png" ShowTitleBar="True" ShowCloseButton="True"
                      ShowIconOnTitleBar="False" TitleForeground="White"
                      GlowBrush="{DynamicResource AccentColorBrush}" EnableDWMDropShadow="True"
                      WindowStartupLocation="CenterScreen">
    
    <Window.Resources>

        <Style x:Key="MetroExpander"
           TargetType="{x:Type Expander}">
            <Setter Property="Margin"
                Value="5" />
            <Setter Property="Padding"
                Value="5" />
            <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
            <Setter Property="Background"
                Value="{DynamicResource AccentColorBrush}" />
            <Setter Property="BorderBrush"
                Value="{DynamicResource AccentColorBrush}" />
            <Setter Property="Controls:ControlsHelper.HeaderFontSize"
                Value="{DynamicResource ContentFontSize}" />
            <Setter Property="Controls:GroupBoxHelper.HeaderForeground"
                Value="{x:Null}" />
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentPresenter Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type Expander}},
                                              Path=Header,
                                              Mode=OneWay,
                                              Converter={StaticResource ToUpperConverter}}">
                            <TextElement.Foreground>
                                <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                    <Binding Mode="OneWay"
                                         Path="Background"
                                         RelativeSource="{RelativeSource FindAncestor,
                                                                         AncestorType={x:Type Expander}}" />
                                    <Binding Mode="OneWay"
                                         Path="(Controls:GroupBoxHelper.HeaderForeground)"
                                         RelativeSource="{RelativeSource FindAncestor,
                                                                         AncestorType={x:Type Expander}}" />
                                </MultiBinding>
                            </TextElement.Foreground>
                        </ContentPresenter>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver" />
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ExpanderRoot">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
                            <DockPanel x:Name="ExpanderRoot">
                                <Border x:Name="HeaderSite"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    DockPanel.Dock="Top">
                                    <StackPanel Orientation="Horizontal">
                                        <ContentPresenter Margin="8,3,5,0"
                                                      Content="{TemplateBinding Header}"
                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                      RecognizesAccessKey="True"
                                                      TextElement.FontSize="{TemplateBinding Controls:ControlsHelper.HeaderFontSize}"
                                                      TextElement.FontStretch="{TemplateBinding Controls:ControlsHelper.HeaderFontStretch}"
                                                      TextElement.FontWeight="{TemplateBinding Controls:ControlsHelper.HeaderFontWeight}" />
                                        <ToggleButton x:Name="ToggleSite"
                                                  Margin="2,0,0,0"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Background="Transparent"
                                                  BorderBrush="Transparent"
                                                  DockPanel.Dock="Left"
                                                  FocusVisualStyle="{x:Null}"
                                                  IsChecked="{Binding IsExpanded,
                                                                  Mode=TwoWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                  Style="{StaticResource ExpanderDownHeaderStyle}" />
                                    </StackPanel>
                                </Border>
                                <Border x:Name="ExpandSite"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Background="Transparent"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,0,1,1"
                                    DockPanel.Dock="Bottom"
                                    Focusable="false"
                                    Opacity="0"
                                    Visibility="Collapsed">
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Cursor="{TemplateBinding Cursor}" />
                                </Border>
                            </DockPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                                 Value="true">
                                <Setter TargetName="ExpandSite"
                                    Property="Visibility"
                                    Value="Visible" />
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.25"
                                                         Storyboard.TargetName="ExpandSite"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.25"
                                                         Storyboard.TargetName="ExpandSite"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="ExpandDirection"
                                 Value="Right">
                                <Setter TargetName="ExpandSite"
                                    Property="DockPanel.Dock"
                                    Value="Right" />
                                <Setter TargetName="ExpandSite"
                                    Property="BorderThickness"
                                    Value="0,1,1,1" />
                                <Setter TargetName="HeaderSite"
                                    Property="DockPanel.Dock"
                                    Value="Left" />
                                <Setter TargetName="ToggleSite"
                                    Property="Style"
                                    Value="{StaticResource ExpanderRightHeaderStyle}" />
                                <Setter TargetName="ToggleSite"
                                    Property="DockPanel.Dock"
                                    Value="Top" />
                            </Trigger>
                            <Trigger Property="ExpandDirection"
                                 Value="Up">
                                <Setter TargetName="ExpandSite"
                                    Property="DockPanel.Dock"
                                    Value="Top" />
                                <Setter TargetName="ExpandSite"
                                    Property="BorderThickness"
                                    Value="1,1,1,0" />
                                <Setter TargetName="HeaderSite"
                                    Property="DockPanel.Dock"
                                    Value="Bottom" />
                                <Setter TargetName="ToggleSite"
                                    Property="Style"
                                    Value="{StaticResource ExpanderUpHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection"
                                 Value="Left">
                                <Setter TargetName="ExpandSite"
                                    Property="DockPanel.Dock"
                                    Value="Left" />
                                <Setter TargetName="ExpandSite"
                                    Property="BorderThickness"
                                    Value="1,1,0,1" />
                                <Setter TargetName="HeaderSite"
                                    Property="DockPanel.Dock"
                                    Value="Right" />
                                <Setter TargetName="ToggleSite"
                                    Property="Style"
                                    Value="{StaticResource ExpanderLeftHeaderStyle}" />
                                <Setter TargetName="ToggleSite"
                                    Property="DockPanel.Dock"
                                    Value="Top" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                 Value="false">
                                <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Expander Width="300" Height="25" FlowDirection="LeftToRight" Header="{x:Static res:Resources.SearchButton}" HorizontalAlignment="Left" Style="{DynamicResource MetroExpander}"
                  ExpandDirection="Right">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Collapsed">
                    <command:EventToCommand Command="{Binding Path=ExpanderClosing}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TextBox Background="{DynamicResource AccentColorBrush4}" BorderThickness="0" Padding="0,-1,0,0"
                               Style="{DynamicResource MetroTextBox}" x:Name="FilterBox" Margin="-5,-5,-5,-5" Text="{Binding Path=FilterText, Mode=TwoWay}"> 
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding FilterDb}" CommandParameter="{Binding ElementName=FilterBox, Path=Text}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </Expander>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" x:Name="StackPanel1" Grid.Row="0">
            <Button Style="{DynamicResource MetroAccentButton}" Background="{Binding Path=Brushes[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Content="{x:Static res:Resources.SeasonButton}" Width="160" Margin="10,10,0,10" Command="{Binding SeasonRatingOpen}"/>
            <Button Style="{DynamicResource MetroAccentButton}" Background="{Binding Path=Brushes[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Content="{x:Static res:Resources.SeriesButton}" Width="160" Margin="10,10,0,10"  Command="{Binding SeriesRatingOpen}"/>
            <Button Style="{DynamicResource MetroAccentButton}" Background="{Binding Path=Brushes[3], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Content="{x:Static res:Resources.WeekButton}" Width="160" Margin="10,10,0,10"  Command="{Binding WeekRatingOpen}"/>
            <Button Style="{DynamicResource MetroAccentButton}" Background="{Binding Path=Brushes[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Content="{x:Static res:Resources.AllTimeButton}" Width="160" Margin="10,10,0,10"  Command="{Binding AllTimeRatingOpen}"/>
        </StackPanel>
        <DataGrid Grid.Row="1" IsReadOnly="True" HorizontalAlignment="Stretch" 
                  VerticalAlignment="Top" ScrollViewer.CanContentScroll="True"
                  ScrollViewer.HorizontalScrollBarVisibility="Visible" 
                  ScrollViewer.VerticalScrollBarVisibility="Visible"
                  VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray"
                  ItemsSource="{Binding Path=ItemsRating, UpdateSourceTrigger=PropertyChanged}" 
                  ColumnWidth="SizeToHeader" MinColumnWidth="40"
                  behaviors:DataGridBehavior.RowNumbers="True" Margin="-1,0,0,0"
                  AutoGenerateColumns="False"
                  ColumnHeaderHeight="40"
                  x:Name="DBViewer"
                  Style="{StaticResource AzureDataGrid}"
                  GridLinesVisibility="All" HeadersVisibility="All">
            <DataGrid.RowHeaderStyle>
                <Style TargetType="DataGridRowHeader" BasedOn="{StaticResource AzureDataGridRowHeader}">
                    <Setter Property="Width" Value="30"/>
                    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                </Style>
            </DataGrid.RowHeaderStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="{x:Static res:Resources.Info}">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.InfographicsTooltip}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="10"/>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Style="{DynamicResource MetroAccentButton}" Padding="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    Content="{x:Static res:Resources.Info}" FontSize="7" CommandParameter="{Binding ElementName=DBViewer, Path=SelectedItem.Nick}"
                                    Command="{Binding Path=DataContext.ShowPlayerInfo, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="CM">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.MemberTooltip}"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                            <Setter Property="FontSize" Value="10"/>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding IsMember}" Padding="0" VerticalAlignment="Center" Style="{StaticResource MetroCheckBox}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <command:EventToCommand Command="{Binding Path=DataContext.MemberStatusChecked, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                                CommandParameter="{Binding Nick}"></command:EventToCommand>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <command:EventToCommand Command="{Binding Path=DataContext.MemberStatusUnchecked, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                                CommandParameter="{Binding Nick}"></command:EventToCommand>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="{x:Static res:Resources.NickHeader}" Binding="{Binding Nick}" Width="Auto">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.NickTooltip}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="10"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="{x:Static res:Resources.GamesHeader}" Binding="{Binding Games}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.GamesTooltip}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="8"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="{x:Static res:Resources.ScoreHeader}" Binding="{Binding Score}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.ScoreTooltip}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="8"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="{x:Static res:Resources.RatingHeader}" Binding="{Binding Rating}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.RatingTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding BestPlayer}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.BestPlayerTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.BestPlayerHeader}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding BestChoice}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.BestChoiceTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.BestChoiceHeader}"/>                                
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Win}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.WinTooltip}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.WinHeader}"/>
                            <Setter Property="FontSize" Value="8"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding TechRed}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.TechRedTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.TechRedHeader}"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding TechBlack}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.TechBlackTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.TechBlackHeader}"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Lose}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.LoseTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.LoseHeader}"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding RedUgadayka}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.RedUgadTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.RedUgadHeader}"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding BlackUgadayka}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.BlackUgadTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.BlackUgadHeader}"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding WinRow}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.WinRowTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.WinRowHeader}"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding WinDon}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.WinDonTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.WinDonHeader}"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding WinSheriff}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.WinSheriffTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.WinSheriffHeader}"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding WinRed}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.WinRedTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.WinRedHeader}"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding WinBlack}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.WinBlackTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.WinBlackHeader}"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="{x:Static res:Resources.FoulsHeader}" Binding="{Binding Fouls}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.FoulsTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <!--<DataGridTextColumn Binding="{Binding WithoutFouls}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="Тривалість серії ігор без фолів"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Content" Value="WFOuls"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>-->
                <DataGridTextColumn Binding="{Binding KilledAtFirstDay}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.KilledFirstTooltip}"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.KilledFirstHeader}"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding ThreeZv}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.ThreeZvTooltip}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.ThreeZvHeader}">
                            </Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Ban}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource AzureDataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="{x:Static res:Resources.BanTooltip}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Content" Value="{x:Static res:Resources.BanHeader}"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="8"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Controls:MetroWindow>
