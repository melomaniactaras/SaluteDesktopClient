<Controls:MetroWindow x:Class="WpfApplication1.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        Title="StopWatch" Height="300" Width="300" Icon="icon.png" WindowStyle="None" Name="Timer"
        xmlns:vsm ="clr-namespace:System.Windows;assembly=PresentationFramework"
        xmlns:res="clr-namespace:WpfApplication1.Properties"
        IsWindowDraggable="{Binding Path=IsPinned, Converter={StaticResource ReverseBoolConverter}}"
        Visibility="{Binding Path=IsTimerVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"
        Topmost="{Binding Path=IsTopmost, Mode=TwoWay}" GlowBrush="{DynamicResource AccentColorBrush}" ShowCloseButton="False" ShowMaxRestoreButton="False">
    <Window.Resources>

        <LinearGradientBrush x:Key="ProgressBrush" EndPoint="0,0.5" StartPoint="1.0,0.5">
            <GradientStop Color="White" Offset="0" />
            <GradientStop Color="White" Offset="1" />
        </LinearGradientBrush>

        <Style TargetType="Controls:ToggleSwitch" x:Key="ToggleSwitchStyle">
            <Setter Property="IsTabStop"
                Value="True" />
            <Setter Property="SwitchForeground"
                Value="{DynamicResource AccentColorBrush}" />
            <Setter Property="HorizontalContentAlignment"
                Value="Left" />
            <Setter Property="VerticalContentAlignment"
                Value="Center" />
            <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
            <Setter Property="FontFamily"
                Value="Segoe UI Semibold" />
            <Setter Property="FontSize"
                Value="14.667" />
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding Mode=OneWay}"
                               TextWrapping="Wrap"
                               FontWeight="Normal"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Top"
                               Margin="0,0,0,5"
                               Opacity="0.65"
                               FontSize="16" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Controls:ToggleSwitch}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25"/>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"
                                                  x:Name="firstCol" />
                                    <ColumnDefinition Width="Auto"
                                                  x:Name="secCol" />
                                </Grid.ColumnDefinitions>
                                <ContentControl x:Name="Header"
                                            Grid.Row="0" Grid.ColumnSpan="2"
                                            Content="{TemplateBinding Header}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            IsTabStop="False" />
                                <ContentControl x:Name="Content"
                                            Grid.Row="0" Grid.ColumnSpan="2"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            IsTabStop="False"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontSize="{TemplateBinding FontSize}"/>
                                <Controls:ToggleSwitchButton x:Name="Switch"
                                                         Grid.Column="1"
                                                         Grid.Row="1"
                                                         Background="{TemplateBinding Background}"
                                                         IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         SwitchForeground="{TemplateBinding SwitchForeground}"
                                                         VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Header}"
                                     Value="{x:Null}">
                                <Setter TargetName="Header"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            </DataTrigger>
                            <Trigger Property="ContentDirection"
                                 Value="RightToLeft">
                                <Setter Property="HorizontalContentAlignment"
                                    Value="Right" />
                                <Setter TargetName="firstCol"
                                    Property="Width"
                                    Value="Auto" />
                                <Setter TargetName="secCol"
                                    Property="Width"
                                    Value="*" />
                                <Setter TargetName="Content"
                                    Property="Grid.Column"
                                    Value="1" />
                                <Setter TargetName="Switch"
                                    Property="Grid.Column"
                                    Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonMute" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}"/>
                            <Path x:Name="Unmute" HorizontalAlignment="Left" ToolTip="Sound On" Width="22" Height="27" Stretch="Uniform"
                                  Fill="{DynamicResource ProgressBrush}" Data="F1 M 20.5862,33.2547L 26.9204,33.2546L 36.4217,25.3369L 36.4217,52.2573L 26.9204,42.756L 20.5862,42.756C 18.8371,42.756 17.4191,41.338 17.4191,39.5889L 17.4191,36.4218C 17.4191,34.6726 18.8371,33.2547 20.5862,33.2547 Z M 57.0079,38.0053C 57.0079,42.8155 55.0582,47.1702 51.906,50.3225L 49.6665,48.083C 52.2456,45.5039 53.8408,41.9409 53.8408,38.0053C 53.8408,34.0279 52.2115,30.431 49.5839,27.8457L 51.4982,25.2933C 54.8892,28.4715 57.0079,32.991 57.0079,38.0053 Z M 50.6737,38.0053C 50.6737,41.4696 49.0845,44.5627 46.5954,46.5954L 44.3398,44.3399C 46.2628,42.8953 47.5066,40.5956 47.5066,38.0053C 47.5066,35.4151 46.2628,33.1153 44.3398,31.6708L 46.5954,29.4152C 49.0845,31.4479 50.6737,34.541 50.6737,38.0053 Z M 44.3395,38.0053C 44.3395,40.1167 42.9621,41.9064 41.0568,42.5248L 39.5889,39.5889C 40.4634,39.5889 41.1724,38.8799 41.1724,38.0053C 41.1724,37.1307 40.4634,36.4218 39.5889,36.4218L 41.0568,33.4858C 42.9621,34.1042 44.3395,35.8939 44.3395,38.0053 Z " />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ButtonMuteOff" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter1" Content="{TemplateBinding Content}"/>
                            <Path x:Name="Mute1" HorizontalAlignment="Left" ToolTip="Sound On" Width="22" Height="27" Stretch="Uniform" Fill="{DynamicResource ProgressBrush}" Data="F1 M 20.5862,33.2547L 26.9204,33.2546L 36.4217,25.3369L 36.4217,52.2573L 26.9204,42.756L 20.5862,42.756C 18.8371,42.756 17.4191,41.338 17.4191,39.5889L 17.4191,36.4218C 17.4191,34.6726 18.8371,33.2547 20.5862,33.2547 Z M 40.9242,44.3957L 46.5229,38.797L 40.9242,33.1983L 44.2834,29.8391L 49.8821,35.4378L 55.4807,29.8392L 58.8399,33.1985L 53.2414,38.797L 58.8401,44.3957L 55.4808,47.7549L 49.8821,42.1562L 44.2834,47.7549L 40.9242,44.3957 Z " />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PinButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal"/>
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="PinPathDisabled" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFA59F93"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="PinPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFA59F93"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="PinPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF7F7F7"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="PinPathDisabled" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF7F7F7"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Path x:Name="PinPath" HorizontalAlignment="Left" ToolTip="Pin off from the MainWindow" Visibility="{TemplateBinding IsChecked, Converter={StaticResource BoolToVisibilityConverter}}" Width="18" Height="18" Stretch="Uniform" Data="M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z" >
                                <Path.Fill>
                                    <SolidColorBrush Color="#FFE0E0E0"/>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="PinPathDisabled" HorizontalAlignment="Left" ToolTip="Pin to MainWindow" Visibility="{TemplateBinding IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=reversed}" Width="18" Height="18" Stretch="Uniform" Data="M2,5.27L3.28,4L20,20.72L18.73,22L12.8,16.07V22H11.2V16H6V14L8,12V11.27L2,5.27M16,12L18,14V16H17.82L8,6.18V4H7V2H17V4H16V12Z" >
                                <Path.Fill>
                                    <SolidColorBrush Color="#FFE0E0E0"/>
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AlwaysOnTopButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal"/>
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="PinPathDisabled" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFA59F93"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="PinPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFA59F93"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="PinPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF7F7F7"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="PinPathDisabled" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF7F7F7"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Path x:Name="PinPath" HorizontalAlignment="Left" ToolTip="Pin off from the MainWindow" Visibility="{TemplateBinding IsChecked, Converter={StaticResource BoolToVisibilityConverter}}" Width="18" Height="18" Stretch="Uniform" Data="F1 M 34,57L 42,57L 42,32.25L 52,42.25L 52,31.75L 38,17.75L 24,31.75L 24,42.25L 34,32.25L 34,57 Z " >
                                <Path.Fill>
                                    <SolidColorBrush Color="#FFE0E0E0"/>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="PinPathDisabled" HorizontalAlignment="Left" ToolTip="Pin to MainWindow" Visibility="{TemplateBinding IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=reversed}" Width="18" Height="18" Stretch="Uniform" Data="F1 M 42,19.0002L 34,19.0002L 34,43.7502L 24,33.7502L 24,44.2502L 38,58.2502L 52,44.2502L 52,33.7502L 42,43.7502L 42,19.0002 Z " >
                                <Path.Fill>
                                    <SolidColorBrush Color="#FFE0E0E0"/>
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Window.Resources>

    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <ToggleButton Style="{StaticResource AlwaysOnTopButton}" IsChecked="{Binding Path=IsTopmost, Mode=TwoWay}"/>
            <ToggleButton Style="{StaticResource PinButton}" IsChecked="{Binding Path=IsPinned, Mode=TwoWay}"/>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.92*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="2.5*"/>
        </Grid.RowDefinitions>
        <Rectangle Fill="{DynamicResource AccentColorBrush2}" Grid.Row="0" Grid.ColumnSpan="2"/>
        <Button Style="{StaticResource ButtonMute}" Command="{Binding MuteButton}" Margin="0 0 0 0" Grid.Row="0"
                Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Top"
                Visibility="{Binding Path=Mute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"/>
        <Button Style="{StaticResource ButtonMuteOff}" Command="{Binding UnMuteButton}" Margin="0 0 0 0" Grid.Row="0"
                Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Top"
                Visibility="{Binding Path=MuteOff, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"/>
        <TextBlock x:Name="ClockTextBlock" Grid.Row="2" Text="{Binding Path=TimerText}" FontWeight="{Binding Path=TimerFontWeight}"
                   Grid.ColumnSpan="2" TextAlignment="Center" VerticalAlignment="Center" FontSize="50" Foreground="#CCE51400" FontFamily="pack://application:,,,/Fonts/#Digital-7 Mono"/>
        <Button Content="{x:Static res:Resources.TimerStart}" Style="{DynamicResource MetroAccentButton}" Command="{Binding Path=TimerStartButton}" x:Name="StartButton" Grid.Row="3" Grid.Column="0"  Width="100" Height="50" HorizontalAlignment="Center" Margin="15,0,0,0"/>
        <Controls:ToggleSwitch IsChecked="{Binding Path=TimerToggleSwitched, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ToggleSwitchStyle}"
                               Grid.Row="1" Grid.ColumnSpan="2" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" OnLabel="{x:Static res:Resources.TimerShort}" OffLabel="{x:Static res:Resources.TimerLong}"
                               FontSize="12" Foreground="{DynamicResource GrayBrush1}"/>
        <Button Style="{DynamicResource MetroAccentButton}"  Content="{x:Static res:Resources.TimerReset}" Command="{Binding Path=TimerStopButton}" x:Name="ClearButton" Grid.Row="3" Grid.Column="1" Width="100" Height="50" HorizontalAlignment="Center" Margin="0,0,15,0"/>
    </Grid>
</Controls:MetroWindow>
