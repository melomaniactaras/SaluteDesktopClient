<controls:MetroWindow x:Class="WpfApplication1.Player"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApplication1"
        x:Name="AudioPlayerWindow"
        xmlns:vsm ="clr-namespace:System.Windows;assembly=PresentationFramework"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
                      xmlns:converters1="clr-namespace:WpfApplication1.Common.Converters"
        mc:Ignorable="d" Icon="icon.png" WindowStyle="None"
        IsWindowDraggable="{Binding Path=IsPlayerPinned, Converter={StaticResource ReverseBoolConverter}}"
        GlowBrush="{DynamicResource AccentColorBrush}" ShowCloseButton="False" ShowMaxRestoreButton="False"
        Visibility="{Binding Path=IsPlayerVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"
        Title="AudioPlayer" Height="420" Width="300">

    <Window.Resources>

        <converters1:TextBlockMaximumLengthConverter x:Key="TextBlockMaximumLengthConverter"/>
        
        <Style TargetType="ScrollViewer" x:Key="CustomScrollViewer">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
            <Setter Property="Padding" Value="4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Border CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ScrollContentPresenter x:Name="ScrollContentPresenter"
                                                  Cursor="{TemplateBinding Cursor}"
                                                  Margin="{TemplateBinding Padding}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"/>

                                <Rectangle Grid.Column="1" Grid.Row="1" Fill="#FFE9EEF4"/>

                                <ScrollBar x:Name="VerticalScrollBar" Width="18" 
                                     IsTabStop="False"
                                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                     Grid.Column="1" Grid.Row="0" Orientation="Vertical"
                                     ViewportSize="{TemplateBinding ViewportHeight}"
                                     Maximum="{TemplateBinding ScrollableHeight}"
                                     Minimum="0"
                                     Value="{TemplateBinding VerticalOffset}"
                                     Margin="0,-1,-1,-1"/>

                                <ScrollBar x:Name="HorizontalScrollBar" Height="18" 
                                     IsTabStop="False"
                                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                     Grid.Column="0" Grid.Row="1" Orientation="Horizontal"
                                     ViewportSize="{TemplateBinding ViewportWidth}"
                                     Maximum="{TemplateBinding ScrollableWidth}"
                                     Minimum="0"
                                     Value="{TemplateBinding HorizontalOffset}"
                                     Margin="-1,0,-1,-1"/>

                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PinButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal"/>
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="PinPathDisabled" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFA59F93"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="PinPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFA59F93"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="PinPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF7F7F7"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="PinPathDisabled" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF7F7F7"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Path x:Name="PinPath" HorizontalAlignment="Left" ToolTip="Pin off from the MainWindow" Visibility="{TemplateBinding IsChecked, Converter={StaticResource BoolToVisibilityConverter}}" Width="18" Height="18" Stretch="Uniform" Data="M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z" >
                                <Path.Fill>
                                    <SolidColorBrush Color="#FFE0E0E0"/>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="PinPathDisabled" HorizontalAlignment="Left" ToolTip="Pin to MainWindow" Visibility="{TemplateBinding IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=reversed}" Width="18" Height="18" Stretch="Uniform" Data="M2,5.27L3.28,4L20,20.72L18.73,22L12.8,16.07V22H11.2V16H6V14L8,12V11.27L2,5.27M16,12L18,14V16H17.82L8,6.18V4H7V2H17V4H16V12Z" >
                                <Path.Fill>
                                    <SolidColorBrush Color="#FFE0E0E0"/>
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="OpenButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal"/>
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="OpenFolder" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFA59F93"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="OpenFolder" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF7F7F7"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Path x:Name="OpenFolder" HorizontalAlignment="Left" ToolTip="Open files" Width="18" Height="18" Stretch="Uniform" Data="F1 M 19,50L 28,34L 63,34L 54,50L 19,50 Z M 19,28.0001L 35,28C 36,25 37.4999,24.0001 37.4999,24.0001L 48.75,24C 49.3023,24 50,24.6977 50,25.25L 50,28L 53.9999,28.0001L 53.9999,32L 27,32L 19,46.4L 19,28.0001 Z " >
                                <Path.Fill>
                                    <SolidColorBrush Color="#FFE0E0E0"/>
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BackwardsButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal"/>
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="CurrentPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF7F7F7"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="CurrentPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFA59F93"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Ellipse Width="38" Height="38" Fill="White"/>
                                <Ellipse Width="34" Height="34" Fill="{DynamicResource AccentColorBrush2}"/>
                                <Canvas Width="48" Height="48" Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0" UseLayoutRounding="False">
                                    <Path Width="20" Height="13" x:Name="CurrentPath" Canvas.Left="13.5" Canvas.Top="17.5" Stretch="Fill" Fill="{DynamicResource GrayHoverBrush}" Data="F1 M 12,17.5L 20.5,24L 12,30.5L 12,17.5 Z M 23,17.5L 31.5,24L 23,30.5L 23,17.5 Z M 33,18L 36,18L 36,30L 33,30L 33,18 Z ">
                                        <Path.LayoutTransform>
                                            <RotateTransform CenterX="0.5" CenterY="0.5" Angle="180"/>
                                        </Path.LayoutTransform>
                                    </Path>
                                </Canvas>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PlayButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal"/>
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="CurrentPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF7F7F7"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="CurrentPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFA59F93"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Ellipse Width="50" Height="50" Fill="White"/>
                                <Ellipse Width="46" Height="46" Fill="{DynamicResource AccentColorBrush2}"/>
                                <Canvas Width="50" Height="58" Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0" UseLayoutRounding="False">
                                    <Path Width="26" Height="24" x:Name="CurrentPath" Canvas.Left="13.5" Canvas.Top="15" Stretch="Fill" Fill="{DynamicResource GrayHoverBrush}" Data="F1 M 19,14L 31.9999,23.7501L 31.9999,24.5001L 19,34L 19,14 Z "/>
                                </Canvas>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PauseButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal"/>
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="CurrentPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF7F7F7"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="CurrentPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFA59F93"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Ellipse Width="38" Height="38" Fill="White"/>
                                <Ellipse Width="34" Height="34" Fill="{DynamicResource AccentColorBrush2}"/>
                                <Canvas Width="48" Height="48" Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0" UseLayoutRounding="False">
                                    <Path Width="16" Height="13" x:Name="CurrentPath" Canvas.Left="16" Canvas.Top="17.5" Stretch="Fill" Fill="{DynamicResource GrayHoverBrush}" Data="M14,19.14H18V5.14H14M6,19.14H10V5.14H6V19.14Z"/>
                                </Canvas>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StopButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal"/>
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="CurrentPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF7F7F7"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="CurrentPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFA59F93"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Ellipse Width="38" Height="38" Fill="White"/>
                                <Ellipse Width="34" Height="34" Fill="{DynamicResource AccentColorBrush2}"/>
                                <Canvas Width="48" Height="48" Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0" UseLayoutRounding="False">
                                    <Path Width="16" Height="16" x:Name="CurrentPath" Canvas.Left="16" Canvas.Top="16" Stretch="Fill" Fill="{DynamicResource GrayHoverBrush}" Data="F1 M 0,0L 48,0L 48,48L 0,48L 0,0"/>
                                </Canvas>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Style="{StaticResource OpenButton}" Command="{Binding Path=OpenSongs}"/>
            <ToggleButton Style="{StaticResource PinButton}" IsChecked="{Binding Path=IsPlayerPinned, Mode=TwoWay}" Margin="5 0 0 0"/>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="98"/>
            <RowDefinition Height="3.3*"/>
        </Grid.RowDefinitions>
        <Rectangle Fill="{DynamicResource AccentColorBrush2}" Grid.Row="0" Grid.ColumnSpan="2" Height="105"/>
        <Grid Grid.Row="0" Height="105">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock FontFamily="pack://application:,,,/Fonts/#Digital-7 Mono" Text="{Binding Path=CurrentLapsedTime,StringFormat={}{0:mm}:{0:ss}}" FontSize="26"
                       Foreground="{DynamicResource WhiteBrush}" VerticalAlignment="Top" Margin="10 2 0 0"/>
            <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Style="{DynamicResource MetroTextBlock}" Text="{Binding Path=SongTitle}" 
                       Foreground="{DynamicResource WhiteBrush}" HorizontalAlignment="Right" Margin="0 3 10 0" FontSize="16"/>
            <TextBlock Grid.Column="1" Style="{DynamicResource MetroTextBlock}" Text="{Binding Path=Artist}" TextWrapping="Wrap"
                       Foreground="{DynamicResource SemiTransparentWhiteBrush}" HorizontalAlignment="Right" Margin="0 22 10 0" FontSize="12"/>
        </Grid>
        <StackPanel Grid.Row="0" Margin="0 32 0 0">
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource BackwardsButton}" Width="48" Height="48" Command="{Binding Path=PrevSong}"/>
                <Button Style="{StaticResource PlayButton}" Width="54" Height="54" Command="{Binding Path=Play}" Margin="-3 -3 0 0"/>
                <Button Style="{StaticResource PauseButton}" Width="48" Height="48" Command="{Binding Path=Pause}" Margin="-3 0 0 0"/>
                <Button Style="{StaticResource StopButton}" Width="48" Height="48" Margin="-6 0 0 0" Command="{Binding Path=Stop}"/>
                <Button Style="{StaticResource BackwardsButton}" Width="48" Height="48" Margin="-6 0 0 0" Command="{Binding Path=NextSong}">
                    <Button.LayoutTransform>
                        <RotateTransform CenterX="0.5" CenterY="0.5" Angle="180"></RotateTransform>
                    </Button.LayoutTransform>
                </Button>
            </StackPanel>
        </StackPanel>

        <Slider Grid.Row="0" Margin="0 15 10 0" VerticalAlignment="Center" HorizontalAlignment="Right" Width="50" Maximum="100" Minimum="0" SmallChange="1"
                IsMoveToPointEnabled="True" Value="{Binding Path=VolumePercent, Mode=TwoWay}" AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="0"/>

        <Slider Grid.Column="0" Grid.Row="0" Margin="0 87 0 0" Width="{Binding ElementName=AudioPlayerWindow, Path=Width}" VerticalAlignment="Top"
                    Style="{DynamicResource FlatSlider}" SmallChange="1" IsMoveToPointEnabled="True" Height="10"
                    Maximum="{Binding Path=SeekBarMaximum}" Value="{Binding Path=SeekBarValue, Mode=TwoWay}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding Path=DragStarted}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding Path=DragCompleted}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Slider>

        <ListBox ItemsSource="{Binding Path=Songs}" Grid.Row="1" x:Name="SongsList" SelectedItem="{Binding Path=CurrentSong, Mode=TwoWay}" HorizontalAlignment="Stretch" SelectionMode="Extended">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="KeyDown">
                    <command:EventToCommand Command="{Binding Path=KeyDown}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewKeyDown">
                    <command:EventToCommand Command="{Binding Path=PreviewKeyDown}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <command:EventToCommand Command="{Binding Path=MouseDClick}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Grid Background="{TemplateBinding Background}">
                                    <vsm:VisualStateManager.VisualStateGroups>
                                        <vsm:VisualStateGroup x:Name="CommonStates">
                                            <vsm:VisualState x:Name="Normal" />
                                            <vsm:VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To=".35"/>
                                                </Storyboard>
                                            </vsm:VisualState>
                                            <vsm:VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                                                </Storyboard>
                                            </vsm:VisualState>
                                        </vsm:VisualStateGroup>
                                        <vsm:VisualStateGroup x:Name="SelectionStates">
                                            <vsm:VisualState x:Name="Unselected" />
                                            <vsm:VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="fillColor2" Storyboard.TargetProperty="Opacity" Duration="0" To=".75"/>
                                                </Storyboard>
                                            </vsm:VisualState>
                                        </vsm:VisualStateGroup>
                                        <vsm:VisualStateGroup x:Name="FocusStates">
                                            <vsm:VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </vsm:VisualState>
                                            <vsm:VisualState x:Name="Unfocused"/>
                                        </vsm:VisualStateGroup>
                                    </vsm:VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="fillColor" Opacity="0" Fill="#FFBADDE9" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
                                    <Rectangle x:Name="fillColor2" Opacity="0" Fill="#FFBADDE9" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
                                    <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                                    <Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" RadiusX="1" RadiusY="1" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.Template>
                    <ControlTemplate>
                        <ScrollViewer>
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </ControlTemplate>
                </ListBox.Template>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical" VirtualizationMode="Recycling"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border BorderThickness="0 0 0 1" BorderBrush="{DynamicResource AccentColorBrush2}" Padding="0">
                            <Grid Height="40">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.6*"/>
                                    <ColumnDefinition Width="7*"/>
                                    <ColumnDefinition Width="1.1*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Foreground="{DynamicResource GrayBrush1}" VerticalAlignment="Center" Margin="0 0 3 0" FontSize="9" HorizontalAlignment="Center">
                                    <Run Text="{Binding Path=Index}"/><Run Text="."/>
                                </TextBlock>
                                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                    <TextBlock Text="{Binding Path=SongName, Converter={StaticResource TextBlockMaximumLengthConverter}, ConverterParameter=30}" FontSize="12" Foreground="{DynamicResource GrayBrush1}"/>
                                    <TextBlock Text="{Binding Path=ArtistName, Converter={StaticResource TextBlockMaximumLengthConverter}, ConverterParameter=50}" FontSize="10" Foreground="DimGray"/>
                                </StackPanel>
                            <TextBlock Text="{Binding Path=Duration,StringFormat={}{0:mm}:{0:ss}}" Grid.Column="2" Foreground="{DynamicResource GrayBrush1}" Margin="0 0 -5 0" FontSize="9" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
       
    </Grid>
</controls:MetroWindow>
