<Controls:MetroWindow x:Class="WpfApplication1.PlayerStats"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:oxy="clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:res="clr-namespace:WpfApplication1.Properties"
        Height="450" Width="750" Title="PLAYER INFO"
        Background="{DynamicResource ProgressBrush}" Foreground="{DynamicResource WhiteBrush}"
        Icon="icon.png" ShowTitleBar="True" ShowCloseButton="True"
        ShowIconOnTitleBar="True" TitleForeground="White"
        GlowBrush="{DynamicResource AccentColorBrush}" EnableDWMDropShadow="True"
        WindowStartupLocation="CenterScreen">
    
    <Window.Resources>
        
        <Style TargetType="Ellipse" x:Key="OuterEllipse">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Fill" Value="{DynamicResource WhiteBrush}"/>
        </Style>
        
        <Style TargetType="TextBlock" x:Key="TextOnCircle">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="10"/>
        </Style>
        
        <Style TargetType="Ellipse" x:Key="InnerEllipse">
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Fill" Value="#FF086F9E"/>
        </Style>
        
        <Style TargetType="Border" x:Key="LittleRedBorder">
            <Setter Property="Background" Value="Red"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Margin" Value="5 0 0 0"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Height" Value="13"/>
        </Style>
        
        <Style TargetType="TextBlock" x:Key="TextInLittleRedBorder">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
        
        <Style TargetType="TextBlock" x:Key="CircleTextBlock">
            <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="0 -3 0 0"/>
        </Style>
    </Window.Resources>
    
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Command="{Binding SeasonButton}" IsEnabled="{Binding Path=SeasonEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0 0 4 0" VerticalAlignment="Center" Text="{x:Static res:Resources.SeasonButton}"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding SeriesButton}" IsEnabled="{Binding Path=SeriesEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0 0 4 0" VerticalAlignment="Center" Text="{x:Static res:Resources.SeriesButton}"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding WeekButton}" IsEnabled="{Binding Path=WeekEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0 0 4 0" VerticalAlignment="Center" Text="{x:Static res:Resources.WeekButton}"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding AllTimeButton}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0 0 4 0" VerticalAlignment="Center" Text="{x:Static res:Resources.AllTimeButton}"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding ExportButton}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0 0 4 0" VerticalAlignment="Center" Text="{x:Static res:Resources.ExportButton}"/>
                </StackPanel>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="1.4*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.9*"/>
            <RowDefinition Height="3.4*"/>
            <RowDefinition Height="2.5*"/>
        </Grid.RowDefinitions>
        <Viewbox Stretch="Uniform" HorizontalAlignment="Left" Margin="10 5 0 5" VerticalAlignment="Bottom">
            <TextBlock Text="{Binding Path=PlayerNick, FallbackValue=null}" Foreground="{DynamicResource WhiteBrush}" 
                   VerticalAlignment="Center" FontWeight="Thin" />
        </Viewbox>
        <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" VerticalAlignment="Center"
                    Margin="0 15 10 0" HorizontalAlignment="Right">
            <TextBlock Text="{x:Static res:Resources.GamesLabel}" FontSize="10" FontWeight="SemiBold" Margin="5 0 0 3" Foreground="{DynamicResource WhiteBrush}" VerticalAlignment="Bottom"/>
            <Border Background="Red" Width="45" Height="20" Margin="5 0 0 0" VerticalAlignment="Bottom">
                <TextBlock Foreground="{DynamicResource WhiteBrush}"
                           Text="{Binding Path=GamesCount, FallbackValue=null, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" FontWeight="Bold"/>
            </Border>
            <TextBlock Text="{x:Static res:Resources.ScoreLabel}" FontSize="10" FontWeight="SemiBold" Margin="5 0 0 3" Foreground="{DynamicResource WhiteBrush}" VerticalAlignment="Bottom"/>
            <Border Background="Red" Width="45" Height="20" Margin="5 0 0 0" VerticalAlignment="Bottom">
                <TextBlock Foreground="{DynamicResource WhiteBrush}"
                           Text="{Binding Path=Score, FallbackValue=null, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" FontWeight="Bold"/>
            </Border>
            <TextBlock Text="{x:Static res:Resources.RatingLabel}" FontSize="10" FontWeight="SemiBold" Margin="5 0 0 3" Foreground="{DynamicResource WhiteBrush}" VerticalAlignment="Bottom"/>
            <Border Background="Red" Width="55" Height="20" Margin="5 0 0 0" VerticalAlignment="Bottom">
                <TextBlock Foreground="{DynamicResource WhiteBrush}"
                           Text="{Binding Path=Rating, FallbackValue=null, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" FontWeight="Bold"/>
            </Border>
        </StackPanel>
        <TextBlock Text="{x:Static res:Resources.SeasonDynamicsLabel}" FontWeight="8" Foreground="{DynamicResource WhiteBrush}" HorizontalAlignment="Left" Margin="50 10 0 0" Grid.Row="1"/>
        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 10 10 0">
            <TextBlock Text="{x:Static res:Resources.Maximum}" FontSize="8" FontWeight="SemiBold" Margin="0 0 0 0" Foreground="{DynamicResource WhiteBrush}" VerticalAlignment="Center"/>
            <Border Style="{StaticResource LittleRedBorder}">
                <TextBlock Style="{StaticResource TextInLittleRedBorder}" Foreground="{DynamicResource WhiteBrush}"
                           Text="{Binding Path=SeasonMaximum, FallbackValue=27}"/>
            </Border>
            <TextBlock Text="{x:Static res:Resources.Minimum}" FontSize="8" FontWeight="SemiBold" Margin="5 0 0 0" Foreground="{DynamicResource WhiteBrush}" VerticalAlignment="Center"/>
            <Border Style="{StaticResource LittleRedBorder}">
                <TextBlock Style="{StaticResource TextInLittleRedBorder}" Foreground="{DynamicResource WhiteBrush}"
                           Text="{Binding Path=SeasonMinimum, FallbackValue=1}"/>
            </Border>
        </StackPanel>
        <TextBlock Text="{x:Static res:Resources.SeriesDynamicsLabel}" FontWeight="8" Foreground="{DynamicResource WhiteBrush}" HorizontalAlignment="Left" Margin="50 90 0 0" Grid.Row="1"/>
        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 90 10 0">
            <TextBlock Text="{x:Static res:Resources.Maximum}" FontSize="8" FontWeight="SemiBold" Margin="0 0 0 0" Foreground="{DynamicResource WhiteBrush}" VerticalAlignment="Center"/>
            <Border Style="{StaticResource LittleRedBorder}">
                <TextBlock Style="{StaticResource TextInLittleRedBorder}" Foreground="{DynamicResource WhiteBrush}"
                           Text="{Binding Path=SeriesMaximum, FallbackValue=27}"/>
            </Border>
            <TextBlock Text="{x:Static res:Resources.Minimum}" FontSize="8" FontWeight="SemiBold" Margin="5 0 0 0" Foreground="{DynamicResource WhiteBrush}" VerticalAlignment="Center"/>
            <Border Style="{StaticResource LittleRedBorder}">
                <TextBlock Style="{StaticResource TextInLittleRedBorder}" Foreground="{DynamicResource WhiteBrush}"
                           Text="{Binding Path=SeriesMinimum, FallbackValue=1}"/>
            </Border>
        </StackPanel>
        <StackPanel Orientation="Vertical" Grid.ColumnSpan="2" Grid.Row="1">
            <oxy:PlotView Model="{Binding Path=SeasonLine}" Background="Transparent"
                      HorizontalAlignment="Stretch" Height="80" Margin="10 25 20 0">
                <oxy:PlotView.TrackerDefinitions>
                    <oxy:TrackerDefinition TrackerKey="Tracker1">
                        <oxy:TrackerDefinition.TrackerTemplate>
                            <ControlTemplate>
                                <Canvas>
                                    <TextBlock Canvas.Left="{Binding Position.X}" Canvas.Top="{Binding Position.Y}" Padding="5" Foreground="Black"
                                               Margin="10" Background="White" Text="{Binding DataPoint.Y}" />
                                </Canvas>
                            </ControlTemplate>
                        </oxy:TrackerDefinition.TrackerTemplate>
                    </oxy:TrackerDefinition>
                </oxy:PlotView.TrackerDefinitions>
            </oxy:PlotView>
            <oxy:PlotView Model="{Binding Path=SeriesLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Transparent"
                      HorizontalAlignment="Stretch" Height="80" Margin="10 0 20 0 ">
                <oxy:PlotView.TrackerDefinitions>
                    <oxy:TrackerDefinition TrackerKey="Tracker1">
                        <oxy:TrackerDefinition.TrackerTemplate>
                            <ControlTemplate>
                                <Canvas>
                                    <TextBlock Canvas.Left="{Binding Position.X}" Canvas.Top="{Binding Position.Y}" Padding="5" Foreground="Black"
                                               Margin="10" Background="White" Text="{Binding DataPoint.Y}" />
                                </Canvas>
                            </ControlTemplate>
                        </oxy:TrackerDefinition.TrackerTemplate>
                    </oxy:TrackerDefinition>
                </oxy:PlotView.TrackerDefinitions>
            </oxy:PlotView>
        </StackPanel>
        <Grid Grid.ColumnSpan="2" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1"/>
                <ColumnDefinition Width="0.65*"/>
                <ColumnDefinition Width="0.55*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <oxy:PlotView Model="{Binding Path=WinLose, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          HorizontalAlignment="Left" Width="130" Margin="20 0 5 20" Background="Transparent"/>
                <oxy:PlotView Model="{Binding Path=RolesStat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          HorizontalAlignment="Left" Width="130" Margin="20 0 5 20" Background="Transparent"/>
            </StackPanel>
            <StackPanel Orientation="Vertical" Grid.Column="2" HorizontalAlignment="Center" Margin="0 0 10 10 ">
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                            <TextBlock Text="{x:Static res:Resources.InfoWins}"></TextBlock>
                            <LineBreak/>
                            <TextBlock Text="{x:Static res:Resources.InfoSheriff}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}" />
                            <TextBlock Style="{StaticResource CircleTextBlock}" FontSize="8">
                                <Run Text="{Binding Path=WinSheriff, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Run Text="%"/>
                            </TextBlock>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="11 0 0 0">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                             <TextBlock Text="{x:Static res:Resources.InfoDon}"></TextBlock>
                            <LineBreak/>
                             <TextBlock Text="{x:Static res:Resources.InfoDonWins}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}" />
                            <TextBlock Style="{StaticResource CircleTextBlock}" FontSize="8">
                                <Run Text="{Binding Path=WinDon, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Run Text="%"/>
                            </TextBlock>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="15 0 0 0">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                            <TextBlock Text="{x:Static res:Resources.InfoRed}"></TextBlock>
                            <LineBreak/>
                            <TextBlock Text="{x:Static res:Resources.InfoRedWins}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}" />
                            <TextBlock Style="{StaticResource CircleTextBlock}" FontSize="8">
                                <Run Text="{Binding Path=WinRed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Run Text="%"/>
                            </TextBlock>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="15 0 0 0">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                            <TextBlock Text="{x:Static res:Resources.InfoBlack}"></TextBlock>
                            <LineBreak/>
                            <TextBlock Text="{x:Static res:Resources.InfoBlackWins}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}" />
                            <TextBlock Style="{StaticResource CircleTextBlock}" FontSize="8">
                                <Run Text="{Binding Path=WinBlack, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Run Text="%"/>
                            </TextBlock>
                        </Grid>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="1 3 0 0">
                    <StackPanel Orientation="Vertical" Margin="0 0 0 0">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                            <TextBlock Text="{x:Static res:Resources.InfoClear}"></TextBlock>
                            <LineBreak/>
                            <TextBlock Text="{x:Static res:Resources.InfoClearRed}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}"/>
                            <TextBlock Style="{StaticResource CircleTextBlock}" Text="{Binding Path=TechRed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="15 0 0 0">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                            <TextBlock Text="{x:Static res:Resources.InfoClear}"></TextBlock>
                            <LineBreak/>
                            <TextBlock Text="{x:Static res:Resources.InfoClearBlack}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}" />
                            <TextBlock Style="{StaticResource CircleTextBlock}" Text="{Binding Path=TechBlack, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="10 0 0 0">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                            <TextBlock Text="{x:Static res:Resources.InfoInUgadRed}"></TextBlock>
                            <LineBreak/>
                            <TextBlock Text="{x:Static res:Resources.InfoInUgad}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}"/>
                            <TextBlock Style="{StaticResource CircleTextBlock}" Text="{Binding Path=RedUgad, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="8 0 0 0">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                            <TextBlock Text="{x:Static res:Resources.InfoInUgadBlack}"></TextBlock>
                            <LineBreak/>
                            <TextBlock Text="{x:Static res:Resources.InfoInUgad}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}"/>
                            <TextBlock Style="{StaticResource CircleTextBlock}" Text="{Binding Path=BlackUgad, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Vertical" Grid.Column="3" HorizontalAlignment="Center" Margin="0 0 0 10 ">
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                            <TextBlock Text="{x:Static res:Resources.InfoBest}"></TextBlock>
                            <LineBreak/>
                            <TextBlock Text="{x:Static res:Resources.InfoPlayer}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}"/>
                            <TextBlock Style="{StaticResource CircleTextBlock}" FontSize="8">
                                <Run Text="{Binding Path=BestPlayer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Run Text="%"/>
                            </TextBlock>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="15 0 5 0">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                            <TextBlock Text="{x:Static res:Resources.InfoPercent}"></TextBlock>
                            <LineBreak/>
                            <TextBlock Text="{x:Static res:Resources.InfoBan}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}"/>
                            <TextBlock Style="{StaticResource CircleTextBlock}" FontSize="8">
                                <Run Text="{Binding Path=BanRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Run Text="%"/>
                            </TextBlock>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="-1 0 0 0">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                            <TextBlock Text="{x:Static res:Resources.InfoFc}"></TextBlock>
                            <LineBreak/>
                            <TextBlock Text="{x:Static res:Resources.InfoFcWins}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}" Margin="14,0,13,2" VerticalAlignment="Bottom"/>
                            <TextBlock Style="{StaticResource CircleTextBlock}" FontSize="8">
                                <Run Text="{Binding Path=FalseComRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Run Text="%"/>
                            </TextBlock>
                        </Grid>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0 3 0 0">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                            <TextBlock Text="{x:Static res:Resources.InfoKilled}"></TextBlock>
                            <LineBreak/>
                            <TextBlock Text="{x:Static res:Resources.InfoFirstNight}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}"/>
                            <TextBlock Style="{StaticResource CircleTextBlock}" FontSize="8">
                                <Run Text="{Binding Path=FirstNightRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Run Text="%"/>
                            </TextBlock>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="17 0 5 0">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                            <TextBlock Text="{x:Static res:Resources.InfoRatio}"></TextBlock>
                            <LineBreak/>
                            <TextBlock Text="{x:Static res:Resources.InfoCheck}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}"/>
                            <TextBlock Style="{StaticResource CircleTextBlock}" FontSize="8">
                                <Run Text="{Binding Path=CheckRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Run Text="%"/>
                            </TextBlock>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="2 0 0 0">
                        <TextBlock Foreground="{DynamicResource WhiteBrush}" Style="{StaticResource TextOnCircle}">
                            <TextBlock Text="{x:Static res:Resources.InfoAverage}"></TextBlock>
                            <LineBreak/>
                            <TextBlock Text="{x:Static res:Resources.InfoFouls}"></TextBlock>
                        </TextBlock>
                        <Grid Margin="0 3 0 0">
                            <Ellipse Style="{StaticResource OuterEllipse}"/>
                            <Ellipse Style="{StaticResource InnerEllipse}"/>
                            <TextBlock Style="{StaticResource CircleTextBlock}" Text="{Binding Path=FoulsRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </Grid>

    </Grid>
</Controls:MetroWindow>
